)abbrev package ST SetTools
++ Author: Raoul Bourquin
++ Date Created: 1 December 2012
++ Date Last Updated: 27 July 2014
++ Description:
++ Some functions for manipulating lists of sets.
SetTools(S : SetCategory) : Exports == Implementation where

  Exports == with

    intersect : List(Set(S)) -> Set(S)
      ++ \spad{intersect} computes the maximal common subset of a list of sets.

    union : List(Set(S)) -> Set(S)
      ++ \spad{union} constructs the union of a list of sets

    coerce : Set(S) -> List(S)
      ++ \spad{coerce} converts a (finite) set to a list.
      -- I'm sure there are better ways to do this. How?

  Implementation == add

    intersect(ls: List Set S) : Set S ==
      #ls = 1 => first ls
      reduce(intersect, ls)


    union(ls: List Set S) : Set S ==
      reduce(union, ls)


    coerce(theset: Set S) : List S ==
      aset := copy(theset)
      alist : List S := empty()

      while not empty? aset repeat
        alist := cons(extract!(aset), alist)

      alist
